function e(e){this.items=[]}var t,o,l,n,r,a,s;function i(e,t){this.gMap=new n.maps.Map(e,t),this.markers=r.create()}t=window,e.prototype={add:function(e){this.items.push(e)},remove:function(e){var t=this.items.indexOf(e);-1!==t&&this.items.splice(t,1)},find:function(e,t){for(var o=this.items,l=o.length,n=[],r=0;r<l;r++)e(o[r],r)&&n.push(o[r]);return t&&t.call(this,n),n}},(o=e).create=function(e){return new o(e)},t.List=o,l=window,n=google,r=List,i.prototype={zoom:function(e){if(!e)return this.gMap.getZoom();this.gMap.setZoom(e)},_on:function(t){var o=this;n.maps.event.addListener(t.obj,t.event,function(e){t.callback.call(o,e)})},addMarker:function(t){var o,l;return t.position={lat:t.lat,lng:t.lng},o=this._createMarker(t),this.markers.add(o),t.event&&this._on({obj:o,event:t.event.name,callback:t.event.callback}),t.content&&this._on({obj:o,event:"click",callback:function(e){l||(l=new n.maps.InfoWindow({content:t.content})),l.getMap()?l.close():l.open(this.gMap,o)}}),o},findBy:function(e){return this.markers.find(e)},removeBy:function(e){this.markers.find(e,function(e){e.forEach(function(e){e.setMap(null)})})},_createMarker:function(e){return e.map=this.gMap,new n.maps.Marker(e)}},(a=i).create=function(e,t){return new a(e,t)},l.Mapster=a,window,s=google,(window.Mapster||(window.Mapster={})).MAP_OPTIONS={center:{lat:37.79135,lng:-122.435883},zoom:10,disableDefaultUI:!1,scrollwheel:!0,draggable:!0,mapTypeId:s.maps.MapTypeId.ROADMAP,zoomControlOptions:{position:s.maps.ControlPosition.BOTTOM_LEFT,style:s.maps.ZoomControlStyle.DEFAULT},panControlOptions:{position:s.maps.ControlPosition.LEFT_BOTTOM},styles:[{elementType:"geometry",stylers:[{color:"#f5f5f5"}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]},{elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{elementType:"labels.text.stroke",stylers:[{color:"#f5f5f5"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#bdbdbd"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"road.arterial",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#dadada"}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{featureType:"road.local",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#c9c9c9"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]}]},function(e,t,o){var l=o.MAP_OPTIONS,n=document.getElementById("map-canvas"),r=new o.create(n,l);r.addMarker({lat:37.79135,lng:-122.435883,draggable:!1,id:1,content:"I like food",icon:"../img/icons/map-pin.png"}),r.addMarker({lat:37.89135,lng:-122.535883,draggable:!1,id:2,content:"I like food",icon:"../img/icons/map-pin.png"});r.removeBy(function(e){return 2===e.id}),console.log(r.markers)}(window,google,window.Mapster||(window.Mapster={}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
