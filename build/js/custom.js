function e(e,t){this.gMap=new l.maps.Map(e,t),this.markers=[]}var t,l,o,r,a,n,s,i,p;t=window,l=google,e.prototype={zoom:function(e){if(!e)return this.gMap.getZoom();this.gMap.setZoom(e)},_on:function(t){var o=this;l.maps.event.addListener(t.obj,t.event,function(e){t.callback.call(o,e)})},addMarker:function(t){var o,r;return t.position={lat:t.lat,lng:t.lng},o=this._createMarker(t),this._addMarker(o),t.event&&this._on({obj:o,event:t.event.name,callback:t.event.callback}),t.content&&this._on({obj:o,event:"click",callback:function(e){r||(r=new l.maps.InfoWindow({content:t.content})),r.getMap()?r.close():r.open(this.gMap,o)}}),o},findMarkerByLat:function(e){for(var t=0;t<this.markers.length;t++){var o=this.markers[t];if(o.position.lat()===e)return o}},_addMarker:function(e){this.markers.push(e)},_removeMarker:function(e){var t=this.markers.indexOf(e);-1!==t&&(this.markers.splice(t,1),e.setMap(null))},_createMarker:function(e){return e.map=this.gMap,new l.maps.Marker(e)}},(o=e).create=function(e,t){return new o(e,t)},t.Mapster=o,window,r=google,(window.Mapster||(window.Mapster={})).MAP_OPTIONS={center:{lat:37.79135,lng:-122.435883},zoom:10,disableDefaultUI:!1,scrollwheel:!0,draggable:!0,mapTypeId:r.maps.MapTypeId.ROADMAP,zoomControlOptions:{position:r.maps.ControlPosition.BOTTOM_LEFT,style:r.maps.ZoomControlStyle.DEFAULT},panControlOptions:{position:r.maps.ControlPosition.LEFT_BOTTOM},styles:[{elementType:"geometry",stylers:[{color:"#f5f5f5"}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]},{elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{elementType:"labels.text.stroke",stylers:[{color:"#f5f5f5"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#bdbdbd"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"road.arterial",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#dadada"}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{featureType:"road.local",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#c9c9c9"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]}]},window,google,a=window.Mapster||(window.Mapster={}),n=a.MAP_OPTIONS,s=document.getElementById("map-canvas"),(i=new a.create(s,n)).addMarker({lat:37.79135,lng:-122.435883,draggable:!1,id:1,content:"I like food",icon:"../img/icons/map-pin.png"}),p=i.addMarker({lat:37.89135,lng:-122.535883,draggable:!1,id:1,content:"I like food",icon:"../img/icons/map-pin.png"}),i._removeMarker(p),console.log(i.findMarkerByLat(37.79135));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
